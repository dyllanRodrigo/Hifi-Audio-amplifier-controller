/* Sketch developed for the main controller (Arduino UNO) to monitor the temperature each output stage channel individually, fan control, status LEDs, and volume level display on 
a small OLED Display. 

Concept name: Oracle - 01
By: dyllgold
*/

#include <OneWire.h>
#include <DallasTemperature.h>
#include <U8g2lib.h>

// Data wire is connected to pin 2 on the Arduino
#define ONE_WIRE_BUS 2
#define ONE_WIRE_BUS_2 3 // Pin for second DS18B20 sensor
#define POTENTIOMETER_PIN A0
#define POTENTIOMETER_PIN_2 A1 // Pin for second potentiometer
#define FAN_PIN 5 // PWM pin for fan control
#define LED_PIN 9 // Connect your first LED to this pin
#define LED_PIN_2 10 // Connect your second LED to this pin
#define LED_PIN_3 11

// PWM settings
#define FAN_MIN_SPEED 15 // Minimum fan speed (%)
#define FAN_MAX_SPEED 100 // Maximum fan speed (%)

// Setup a oneWire instance to communicate with any OneWire devices
OneWire oneWire(ONE_WIRE_BUS);
OneWire oneWire2(ONE_WIRE_BUS_2); // For second DS18B20 sensor

// Pass our oneWire reference to Dallas Temperature sensor
DallasTemperature sensors(&oneWire);
DallasTemperature sensors2(&oneWire2); // For second DS18B20 sensor

// OLED display
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

// 'Oracle-Logo (1)', 128x64px
const unsigned char bitmap_data [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x90, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x88, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x8c, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x87, 0x61, 0x00, 0x80, 0x07, 0xf0, 0x19, 0xc0, 0x0f, 0x18, 0x00, 0xf0, 0x01, 0x00, 
	0x00, 0x80, 0xc3, 0xc1, 0x01, 0xc0, 0x07, 0xf8, 0x1f, 0xe0, 0x1f, 0x18, 0x00, 0xfc, 0x03, 0x00, 
	0x00, 0xc0, 0xc3, 0xc3, 0x03, 0xe0, 0x00, 0x1c, 0x1f, 0x70, 0x38, 0x18, 0x00, 0x1e, 0x07, 0x00, 
	0x00, 0xe0, 0xc1, 0x83, 0x07, 0x70, 0x00, 0x0e, 0x1c, 0x38, 0x70, 0x18, 0x00, 0x06, 0x0c, 0x00, 
	0x00, 0xf0, 0xc0, 0x03, 0x0f, 0x30, 0x00, 0x06, 0x18, 0x18, 0x60, 0x18, 0x00, 0x07, 0x1c, 0x00, 
	0x00, 0xf8, 0xc0, 0x03, 0x1f, 0x38, 0x00, 0x03, 0x18, 0x18, 0x00, 0x18, 0x00, 0x03, 0x18, 0x00, 
	0x00, 0xf8, 0xc0, 0x03, 0x0f, 0x38, 0x00, 0x03, 0x18, 0x1c, 0x00, 0x38, 0x00, 0xff, 0x1f, 0x00, 
	0x00, 0xe0, 0xc1, 0x83, 0x07, 0x38, 0x00, 0x03, 0x18, 0x18, 0x00, 0x38, 0x00, 0xff, 0x1f, 0x00, 
	0x00, 0xc0, 0xc3, 0xc3, 0x03, 0x38, 0x00, 0x06, 0x18, 0x18, 0x60, 0x38, 0x00, 0x03, 0x00, 0x00, 
	0x00, 0x80, 0xe7, 0xe3, 0x01, 0x38, 0x00, 0x0e, 0x1c, 0x38, 0x70, 0x70, 0x00, 0x06, 0x0c, 0x00, 
	0x00, 0x00, 0xef, 0xf7, 0x00, 0x38, 0x00, 0x1c, 0x1e, 0x70, 0x38, 0xf0, 0x07, 0x1e, 0x0f, 0x00, 
	0x00, 0x00, 0xfe, 0x7f, 0x00, 0x38, 0x00, 0xf8, 0x1f, 0xe0, 0x1f, 0xe0, 0x07, 0xfc, 0x07, 0x00, 
	0x00, 0x00, 0xfc, 0x3f, 0x00, 0x38, 0x00, 0xf0, 0x19, 0xc0, 0x0f, 0x80, 0x07, 0xf0, 0x01, 0x00, 
	0x00, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'Oracle-info (2)', 128x64px
const unsigned char bitmap_data2 [] PROGMEM = {
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xc0, 0x4f, 0x90, 0x40, 0xc0, 0x83, 0x43, 0xc0, 0xc7, 0x78, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x60, 0x4e, 0x90, 0x40, 0x60, 0x46, 0x46, 0x60, 0xc6, 0xcc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x20, 0x4c, 0x90, 0x40, 0x30, 0x20, 0x4c, 0x20, 0x04, 0x04, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x20, 0x4c, 0x90, 0x41, 0x90, 0x27, 0x48, 0x30, 0x04, 0x78, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x20, 0x4c, 0x90, 0x41, 0x30, 0x24, 0x4c, 0x20, 0x04, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x60, 0x8e, 0x18, 0xc3, 0x60, 0x46, 0xc6, 0x61, 0x06, 0x8c, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xc0, 0x0f, 0x1f, 0x86, 0xc3, 0x83, 0x03, 0xc3, 0x07, 0xf8, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xc0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x80, 0x0f, 0xc0, 0x03, 0x3c, 0x03, 0x3c, 0x60, 0x00, 0xf8, 0x00, 0x00, 0x0f, 0x0c, 0x00, 
	0x00, 0xc0, 0x1f, 0xe0, 0x03, 0xff, 0x03, 0xff, 0x60, 0x00, 0xfc, 0x01, 0x80, 0x19, 0x0c, 0x00, 
	0x00, 0x60, 0x30, 0x30, 0x80, 0xc3, 0x83, 0xc3, 0x61, 0x00, 0x0e, 0x03, 0x80, 0x30, 0x0c, 0x00, 
	0x00, 0x30, 0x60, 0x38, 0x80, 0x81, 0x83, 0x81, 0x61, 0x00, 0x06, 0x06, 0xc0, 0x30, 0x0c, 0x00, 
	0x00, 0x30, 0x60, 0x18, 0x80, 0x00, 0x83, 0x00, 0x60, 0x00, 0x03, 0x06, 0xc0, 0x30, 0x0c, 0x00, 
	0x00, 0x30, 0x60, 0x18, 0xc0, 0x00, 0xc3, 0x00, 0x60, 0x00, 0xff, 0x07, 0xc0, 0x30, 0x0c, 0x00, 
	0x00, 0x30, 0x60, 0x18, 0x80, 0x00, 0x83, 0x00, 0x60, 0x00, 0xff, 0x07, 0xc0, 0x30, 0x0c, 0x00, 
	0x00, 0x30, 0x60, 0x18, 0x80, 0x81, 0x83, 0x81, 0x61, 0x00, 0x02, 0x00, 0xc0, 0x30, 0x0c, 0x00, 
	0x00, 0x60, 0x30, 0x18, 0x80, 0xc3, 0x83, 0xc3, 0xc1, 0x00, 0x06, 0x03, 0x80, 0x30, 0x0c, 0x00, 
	0x00, 0xc0, 0x1f, 0x18, 0x00, 0xff, 0x03, 0xff, 0x80, 0x0f, 0xfc, 0x03, 0x80, 0x19, 0x0c, 0x00, 
	0x00, 0x80, 0x0f, 0x18, 0x00, 0x3c, 0x03, 0x3c, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x0f, 0x0c, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x04, 0x10, 0x00, 0x02, 0x80, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
	0x00, 0x9c, 0x74, 0x94, 0xc3, 0xa4, 0x93, 0x74, 0x0e, 0xcc, 0x70, 0x36, 0x27, 0x40, 0x67, 0x00, 
	0x00, 0xa4, 0x94, 0x52, 0x62, 0xa5, 0x94, 0x54, 0xea, 0x5a, 0x48, 0x49, 0x29, 0x5c, 0x15, 0x00, 
	0x00, 0xa4, 0x94, 0x52, 0xc2, 0xa5, 0x94, 0x54, 0x2a, 0x1e, 0x48, 0x49, 0x29, 0x44, 0x17, 0x00, 
	0x00, 0xa4, 0x77, 0x92, 0xc3, 0x99, 0xf7, 0x73, 0x2e, 0x0e, 0x70, 0x49, 0x4f, 0x44, 0x17, 0x00, 
	0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'frame_000_delay-0', 20x20px
const unsigned char epd_bitmap_frame_000_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x80, 0x7f, 0x00, 0x00, 0x7f, 0x00, 0x00, 0xff, 0x00, 0x00, 
	0xfe, 0x00, 0x00, 0x78, 0x00, 0x30, 0x60, 0x00, 0x7c, 0x2e, 0x00, 0x3e, 0x0f, 0x00, 0x3e, 0x0f, 
	0x00, 0x7e, 0x0f, 0x00, 0x7e, 0xe0, 0x03, 0x7e, 0xf8, 0x07, 0x3c, 0xfe, 0x03, 0x1c, 0xfe, 0x03, 
	0x18, 0xfc, 0x01, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_054_delay-0', 20x20px
const unsigned char epd_bitmap_frame_054_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x01, 0x78, 0xf0, 0x03, 0xfc, 
	0xf0, 0x03, 0xfe, 0xf1, 0x03, 0x7e, 0xe0, 0x03, 0x7e, 0xee, 0x03, 0x3e, 0xcf, 0x01, 0x3e, 0xcf, 
	0x00, 0x06, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x80, 0x09, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x3f, 0x00, 
	0xc0, 0x7f, 0x00, 0x80, 0x7f, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00
};
// 'frame_162_delay-0', 20x20px
const unsigned char epd_bitmap_frame_162_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0xe0, 0x3f, 0x00, 0xc0, 0x3f, 0x00, 0x80, 0x7f, 0x00, 0x00, 
	0x7f, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0e, 0x00, 0x3c, 0x0f, 0x00, 0x3e, 0xcf, 
	0x07, 0x7e, 0xcf, 0x07, 0x7e, 0xe0, 0x07, 0x7e, 0xf8, 0x07, 0x3e, 0xfc, 0x03, 0x3c, 0xf8, 0x03, 
	0x18, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_108_delay-0', 20x20px
const unsigned char epd_bitmap_frame_108_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0xf0, 0x03, 0x00, 0xf8, 0x07, 0x00, 0xfc, 0x07, 0x00, 0xfc, 
	0x07, 0x03, 0xfc, 0x81, 0x07, 0x70, 0xc0, 0x07, 0x00, 0xee, 0x07, 0x00, 0xcf, 0x07, 0x00, 0xcf, 
	0x07, 0x70, 0xef, 0x07, 0x78, 0xe0, 0x03, 0xf8, 0xc1, 0x01, 0xf8, 0x03, 0x00, 0xf8, 0x03, 0x00, 
	0xf8, 0x03, 0x00, 0xf0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00
};
// 'frame_216_delay-0', 20x20px
const unsigned char epd_bitmap_frame_216_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0xf8, 0x00, 0x00, 0xf8, 0x01, 0x38, 0xf8, 0x01, 0xfc, 
	0xf8, 0x03, 0xfe, 0xf8, 0x03, 0x7e, 0xe0, 0x01, 0x7e, 0xee, 0x01, 0x3e, 0x4f, 0x00, 0x3e, 0x0f, 
	0x00, 0x0e, 0x0f, 0x00, 0x02, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0xff, 0x01, 0x00, 0xff, 0x01, 
	0x00, 0xff, 0x01, 0x00, 0xfe, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00
};
// 'frame_270_delay-0', 20x20px
const unsigned char epd_bitmap_frame_270_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x00, 0xf8, 0x83, 0x01, 0xfc, 0x87, 0x03, 0xfc, 
	0xc7, 0x03, 0xfe, 0xc1, 0x07, 0x78, 0xe0, 0x07, 0x00, 0xee, 0x07, 0x00, 0xcf, 0x07, 0x00, 0xcf, 
	0x07, 0x00, 0xcf, 0x03, 0x60, 0xc0, 0x00, 0xe0, 0x01, 0x00, 0xf0, 0x07, 0x00, 0xf0, 0x0f, 0x00, 
	0xe0, 0x0f, 0x00, 0xe0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0x00, 0x00, 0x00
};
// 'frame_324_delay-0', 20x20px
const unsigned char epd_bitmap_frame_324_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0xe0, 0x3f, 0x00, 0xe0, 0x3f, 0x00, 0xc0, 0x3f, 0x00, 0x80, 
	0x3f, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x06, 0x30, 0xcf, 0x07, 0x38, 0xcf, 
	0x07, 0x7c, 0xcf, 0x07, 0x7c, 0xe0, 0x07, 0xfc, 0xf0, 0x07, 0xfc, 0xf8, 0x03, 0xfc, 0xe0, 0x01, 
	0xf8, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_378_delay-0', 20x20px
const unsigned char epd_bitmap_frame_378_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0xfc, 0x00, 0x00, 0xfc, 0x01, 0x00, 0xfc, 0x01, 0x00, 
	0xfc, 0x01, 0x78, 0xf8, 0x01, 0x7c, 0xe0, 0x01, 0x7e, 0xee, 0x00, 0x3e, 0x4f, 0x00, 0x3e, 0x0f, 
	0x00, 0x7e, 0x0f, 0x00, 0x3e, 0x60, 0x00, 0x1e, 0xf0, 0x03, 0x0c, 0xfe, 0x03, 0x00, 0xfe, 0x03, 
	0x00, 0xfe, 0x01, 0x00, 0xfc, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00
};
// 'frame_432_delay-0', 20x20px
const unsigned char epd_bitmap_frame_432_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x80, 0x01, 0xfc, 0xc1, 0x03, 0xfc, 
	0xc3, 0x03, 0xfe, 0xe1, 0x07, 0x7e, 0xe0, 0x07, 0x7e, 0xee, 0x07, 0x3e, 0xcf, 0x07, 0x00, 0xcf, 
	0x07, 0x00, 0xef, 0x03, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xe0, 0x0f, 0x00, 0xe0, 0x1f, 0x00, 
	0xe0, 0x3f, 0x00, 0xc0, 0x7f, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00
};
// 'frame_486_delay-0', 20x20px
const unsigned char epd_bitmap_frame_486_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0xf0, 0x07, 0x00, 0xf8, 0x0f, 0x00, 0xf8, 0x0f, 0x00, 0xf8, 
	0x0f, 0x00, 0xe0, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x07, 0x00, 0xcf, 0x07, 0x30, 0xcf, 
	0x07, 0x78, 0xef, 0x07, 0x78, 0xe0, 0x07, 0xfc, 0xf1, 0x07, 0xfc, 0xf1, 0x03, 0xf8, 0xe1, 0x01, 
	0xf8, 0x01, 0x00, 0xf0, 0x01, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 800)
const int epd_bitmap_allArray_LEN = 10;
const unsigned char* epd_bitmap_allArray[10] = {
	epd_bitmap_frame_000_delay_0,
	epd_bitmap_frame_054_delay_0,
	epd_bitmap_frame_108_delay_0,
	epd_bitmap_frame_162_delay_0,
	epd_bitmap_frame_216_delay_0,
	epd_bitmap_frame_270_delay_0,
	epd_bitmap_frame_324_delay_0,
	epd_bitmap_frame_378_delay_0,
	epd_bitmap_frame_432_delay_0,
	epd_bitmap_frame_486_delay_0
};


int counter = 0; // counter for the currently displayed frame of the animation

void setup() {
  // Start the serial communication
  Serial.begin(9600);

  // Start the sensors
  sensors.begin();
  sensors2.begin(); // For second DS18B20 sensor

  // Initialize the OLED display
  u8g2.begin();

  // Set the PWM pin for fan control as output
  pinMode(FAN_PIN, OUTPUT);

  // Set the LED pins as output
  pinMode(LED_PIN, OUTPUT);
  pinMode(LED_PIN_2, OUTPUT);

  // Scene 1: Display "Bienvenido" for 5 seconds
  u8g2.clearBuffer();
  u8g2.drawXBMP(0, 0, 128, 64, bitmap_data);
  u8g2.sendBuffer();
  delay(5000);

  u8g2.clearBuffer();
  u8g2.drawXBMP(0, 0, 128, 64, bitmap_data2);
  u8g2.sendBuffer();
  delay(6000);

  // Scene 2: Display "Calentando tubos al vacio" for 2 seconds and blink LED
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_ncenB08_tr); // Use an even smaller font
  u8g2.setCursor(20, 30);
  u8g2.print("Precalentando");
  u8g2.setCursor(20, 45);
  u8g2.print("tubos...");
  u8g2.sendBuffer();
  unsigned long startTime = millis();
  while (millis() - startTime < 15000) { // Blink LED for 15 s
    int brightness = (int)(120 + 120 * sin(2.0 * PI * (millis() % 2000) / 2000.0)); // Create a fade in-fade out effect
    analogWrite(LED_PIN, brightness);
    delay(10); // Wait for 10 milliseconds
  }
  analogWrite(LED_PIN, 0); // Turn off the first LED

  // Fade in the second LED
  for (int i = 0; i <= 60; i++) {
    analogWrite(LED_PIN_2, i);
    delay(20); // This will create a slow fade in effect over ~5 seconds
  }
}

void loop() {
  // Request temperatures from both sensors
  sensors.requestTemperatures();
  sensors2.requestTemperatures(); // For second DS18B20 sensor

  // Read temperatures from both sensors
  float temp1 = sensors.getTempCByIndex(0);
  float temp2 = sensors2.getTempCByIndex(0); // For second DS18B20 sensor

  // Read potentiometer values for both volume controls
  int potValue1 = analogRead(POTENTIOMETER_PIN);
  int potValue2 = analogRead(POTENTIOMETER_PIN_2);

  // Map the potentiometer values to volume ranges (0-100)
  int volume1 = map(potValue1, 0, 1023, 0, 60);
  int volume2 = map(potValue2, 0, 1023, 0, 60);

  // Calculate fan speed based on temperatures
  int fanSpeed = FAN_MIN_SPEED; // Default to minimum speed

  if (temp1 > 40 || temp2 > 40) {
    // If either temperature is above 40C, calculate fan speed based on temperature
    fanSpeed = map(max(temp1, temp2), 40, 60, FAN_MIN_SPEED + 20, FAN_MAX_SPEED);
  }

  if (temp1 > 60 || temp2 > 60) {
    fanSpeed = 100;
  }

  // Set fan speed
  analogWrite(FAN_PIN, map(fanSpeed, 0, 100, 0, 255));

// Control LED_PIN_3 behavior
  if (temp1 > 60) {
      // Blink LED_PIN_3 if temp is above 60deg
    digitalWrite(LED_PIN_3, HIGH); // Turn on LED_PIN_3
    delay(500); // Wait for 500 milliseconds
    digitalWrite(LED_PIN_3, LOW); // Turn off LED_PIN_3
    delay(500); // Wait for 500 milliseconds
  } else {
    // Turn on LED_PIN_3 if temp is 60deg or below
    analogWrite(LED_PIN_3, 255); // Turn on LED_PIN_3 at full brightness
  }

  // Display temperatures, fan speed, and volume meters on the OLED screen
  u8g2.clearBuffer();

  u8g2.drawXBMP(100, 0, 20, 20, epd_bitmap_allArray[counter]); // draw frame of the animation

	counter = (counter + 1) % 10; 

  u8g2.setFont(u8g2_font_ncenB14_tr);
  u8g2.setCursor(0, 15);
  u8g2.print(fanSpeed);
  u8g2.print("%");

  u8g2.setFont(u8g2_font_ncenB14_tr);
  u8g2.setCursor(0, 45);
  u8g2.print(temp1, 1); // Display temperature with one decimal place
  u8g2.print(" C");

  u8g2.setCursor(70, 45);
  u8g2.print(temp2, 1); // Display temperature with one decimal place
  u8g2.print(" C");

  u8g2.setFont(u8g2_font_ncenB10_tr); // Smaller font for fan speed and volume meters
  u8g2.setCursor(0, 64);
  u8g2.print("VL: ");
  u8g2.print(volume1);

  u8g2.setCursor(70, 64);
  u8g2.print("VR: ");
  u8g2.print(volume2);

  u8g2.sendBuffer();

  delay(200); // display refresh rate
}